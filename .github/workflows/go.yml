# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: |
        go mod tidy 
        mkdir tmp
        go build -o ./cmd/user-api ./app/user/cmd/api/user.go
        go build -o ./cmd/user-rpc ./app/user/cmd/rpc/user.go
        tar -zcvf ./cmd.tar.gz ./cmd
    
    - name: Deploy To Server
      uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
      with:
        host: ${{ secrets.HOST }} 
        port: ${{ secrets.PORT }}
        user: ${{ secrets.USERNAME }}
        pass: ${{ secrets.PASSWORD }}
        first_ssh: |
          cd /home/guochenxu/gtodolist/go
          if [ -f "./cmd.tar.gz" ]; then rm ./cmd.tar.gz; fi
        scp: |
          './cmd.tar.gz' => /home/guochenxu/gtodolist/go/
        last_ssh: |
          cd /home/guochenxu/gtodolist/go
          ./start.sh
