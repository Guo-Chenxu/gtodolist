syntax = "v1"

info(
	title: "Task API"
	desc: "API for task"
	author: "GuoChenxu"
	email: "2269409349@qq.com"
	version: "1.0"
)

// task_create
type (
	CreateReq {
		Title   string `form:"title"`
		Content string `form:"content"`
		Status  string `form:"status"`
	}

	CreateResp {
		Status  int    `json:"status"`
		Data    string `json:"data"`
		Message string `json:"msg"`
		Error   string `json:"error"`
	}
)

type Task {
	Id        int64  `json:"id"`
	Title     string `json:"title"`
	Content   string `json:"content"`
	View      int    `json:"view"`
	Status    int    `json:"status"`
	CreateAt  int64  `json:"create_at"`
	StartTime int64  `json:"start_time"`
	EndTime   int64  `json:"end_time"`
}

// task_list
type (
	ListReq {
		Limit string `form:"limit,optional"`
		Start string `form:"start,optional"`
	}

	Data {
		Task  []Task `json:"item"`
		Total int    `json:"total"`
	}

	ListResp {
		Status  int    `json:"status"`
		Data    Data   `json:"data"`
		Message string `json:"msg"`
		Error   string `json:"error"`
	}
)

// task_show
type (
	ShowReq {
		Id int64 `form:"id"`
	}

	ShowResp {
		Status  int    `json:"status"`
		Data    Task   `json:"data"`
		Message string `json:"msg"`
		Error   string `json:"error"`
	}
)

// task_update
type (
	UpdateReq {
		Id      string `form:"id"`
		Title   string `form:"title"`
		Content string `form:"content"`
		Status  string `form:"status"`
	}

	UpdateResp {
		Status  int    `json:"status"`
		Data    string `json:"data"`
		Message string `json:"msg"`
		Error   string `json:"error"`
	}
)

// task_search
type (
	SearchReq {
		Info string `form:"info"`
	}

	SearchResp {
		Status  int    `json:"status"`
		Data    Data   `json:"data"`
		Message string `json:"msg"`
		Error   string `json:"error"`
	}
)

// task_delete
type (
	DeleteReq {
		Id string `form:"id"`
	}

	DeleteResp {
		Status  int    `json:"status"`
		Data    string `json:"data"`
		Message string `json:"msg"`
		Error   string `json:"error"`
	}
)

@server(
	prefix: api/v1
	jwt: JwtAuth
)

service user {
	@doc "task_create"
	@handler TaskCreate
	post /task_create (CreateReq) returns (CreateResp)

	@doc "task_list"
	@handler TaskList
	get /task_list (ListReq) returns (ListResp)

	@doc "task_show"
	@handler TaskShow
	get /task_show (ShowReq) returns (ShowResp)

	@doc "task_update"
	@handler TaskUpdate
	post /task_update (UpdateReq) returns (UpdateResp)

	@doc "task_search"
	@handler TaskSearch
	post /task_search (SearchReq) returns (SearchResp)

	@doc "task_delete"
	@handler TaskDelete
	post /task_delete (DeleteReq) returns (DeleteResp)
}