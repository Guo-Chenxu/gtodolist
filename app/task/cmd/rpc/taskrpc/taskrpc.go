// Code generated by goctl. DO NOT EDIT.
// Source: task.proto

package taskrpc

import (
	"context"

	"gtodolist/app/task/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateReq  = pb.CreateReq
	CreateResp = pb.CreateResp
	Data       = pb.Data
	DeleteReq  = pb.DeleteReq
	DeleteResp = pb.DeleteResp
	ListReq    = pb.ListReq
	ListResp   = pb.ListResp
	SearchReq  = pb.SearchReq
	SearchResp = pb.SearchResp
	ShowReq    = pb.ShowReq
	ShowResp   = pb.ShowResp
	Task       = pb.Task
	UpdateReq  = pb.UpdateReq
	UpdateResp = pb.UpdateResp

	Taskrpc interface {
		CreateTask(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error)
		ListTask(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		ShowTask(ctx context.Context, in *ShowReq, opts ...grpc.CallOption) (*ShowResp, error)
		UpdateTask(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error)
		SearchTask(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error)
		DeleteTask(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error)
	}

	defaultTaskrpc struct {
		cli zrpc.Client
	}
)

func NewTaskrpc(cli zrpc.Client) Taskrpc {
	return &defaultTaskrpc{
		cli: cli,
	}
}

func (m *defaultTaskrpc) CreateTask(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	client := pb.NewTaskrpcClient(m.cli.Conn())
	return client.CreateTask(ctx, in, opts...)
}

func (m *defaultTaskrpc) ListTask(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := pb.NewTaskrpcClient(m.cli.Conn())
	return client.ListTask(ctx, in, opts...)
}

func (m *defaultTaskrpc) ShowTask(ctx context.Context, in *ShowReq, opts ...grpc.CallOption) (*ShowResp, error) {
	client := pb.NewTaskrpcClient(m.cli.Conn())
	return client.ShowTask(ctx, in, opts...)
}

func (m *defaultTaskrpc) UpdateTask(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	client := pb.NewTaskrpcClient(m.cli.Conn())
	return client.UpdateTask(ctx, in, opts...)
}

func (m *defaultTaskrpc) SearchTask(ctx context.Context, in *SearchReq, opts ...grpc.CallOption) (*SearchResp, error) {
	client := pb.NewTaskrpcClient(m.cli.Conn())
	return client.SearchTask(ctx, in, opts...)
}

func (m *defaultTaskrpc) DeleteTask(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error) {
	client := pb.NewTaskrpcClient(m.cli.Conn())
	return client.DeleteTask(ctx, in, opts...)
}
