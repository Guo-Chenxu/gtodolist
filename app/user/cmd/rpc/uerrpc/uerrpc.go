// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package uerrpc

import (
	"context"

	"gtodolist/app/user/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Data         = pb.Data
	LoginReq     = pb.LoginReq
	LoginResp    = pb.LoginResp
	RegisterReq  = pb.RegisterReq
	RegisterResp = pb.RegisterResp
	User         = pb.User

	Uerrpc interface {
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	}

	defaultUerrpc struct {
		cli zrpc.Client
	}
)

func NewUerrpc(cli zrpc.Client) Uerrpc {
	return &defaultUerrpc{
		cli: cli,
	}
}

func (m *defaultUerrpc) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := pb.NewUerrpcClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUerrpc) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := pb.NewUerrpcClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
